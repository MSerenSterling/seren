@use "../setup";
@use "../utility";
@use "variables";

$font-size: 16;
$submenu-font-size: 16;
$font-weigth: 700;
$color: var(--wp--preset--color--black);
$hover: var(--wp--preset--color--primary);

.menu-wrapper {
  flex-direction: column;
  @media (min-width: variables.$nav-breakpoint) {
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: flex-end;
    gap: 1rem;
  }
}

.menu-wrapper,
.sub-menu,
.menu {
    @extend %unstyled-list;
}

.menu-item {
  display: flex;
  align-items: center;
}

.menu-item > a {
    color: inherit;
    text-decoration: none;
    padding: 0.5rem;
    display: inline-block;
    max-width: 25ch;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
    font-weight: $font-weigth;
    @media (min-width: variables.$nav-breakpoint) {
      &:hover,
      &:focus {
          color: $hover;
      }
    }
}

.current-menu-item a {
    position: relative;
    width: max-content;
    &:before {
        content: "";
        position: absolute;
        width: calc(100% - 1em);
        height: 15%;
        background-color: var(--wp--preset--color--secondary);
        z-index: -1;
        bottom: 0.8em;
    }
}

.has-text-inverted-color .menu-item > a{
  &:hover,
  &:focus {
    color: #F9FCFF;
  }
}


li.menu-item-has-children {
    position: relative;
    @media (max-width: variables.$nav-breakpoint - 1) {
      flex-wrap: wrap;
      > .flyout-menu {
        display: none;
        padding: 0;
        overflow: hidden;
        transition: height 0.3s ease-out;
        height: 0px;
      }
    }
    @media (min-width: variables.$nav-breakpoint) {
      > .flyout-menu {
        top: 100%;
        z-index: 2;
        @include utility.slideClosedState;
      }
      &.submenu-open > .flyout-menu,
      &:hover > .flyout-menu {
        display: grid;
        @include utility.slideOpenState;
      }
    }
  }

.flyout-menu {
  padding: 1.5rem;
  width: 100%;
  @media (min-width: variables.$nav-breakpoint) {
    border-radius: 2px;
    box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
    background: #fff;
    width: max-content;
  }
  &.edge {
    right: 0;
  }
}

// Position nested submenu to side of parent
.flyout-menu > .menu-item-has-children > .flyout-menu {
    top: 0;
    left: calc(100% + 1.5rem);
    &.edge {
      left: unset;
      right: calc(100% + 1.5rem);
    }
  }

button.toggle-flyout {
  @extend %unstyled-button;
  color: inherit;
  height: 100%;
  display: inline-grid;
  align-items: center;
}
  //rotate arrow when submenu open
button.toggle-flyout svg {
    transition: 0.3s;
}
  
.submenu-open > button.toggle-flyout svg {
    transform: rotate(180deg);
    color: $hover;
}
  
@media (min-width: variables.$nav-breakpoint) {
    .menu-item:hover > button.toggle-flyout svg {
        transform: rotate(180deg);
        color: $hover;
    }
}